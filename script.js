// DOMË¶ÅÁ¥†„ÅÆÂèñÂæó
document.addEventListener('DOMContentLoaded', function() {
    const ninjaCards = document.querySelectorAll('.ninja-card');
    const floatingNinjas = document.querySelectorAll('.floating-ninja');
    const titleChars = document.querySelectorAll('.title-char');

    // „Éã„É≥„Ç∏„É£„Ç´„Éº„Éâ„ÅÆ„ÇØ„É™„ÉÉ„ÇØ„Ç§„Éô„É≥„Éà
    ninjaCards.forEach(card => {
        card.addEventListener('click', function() {
            const ninjaName = this.dataset.ninja;
            showNinjaModal(ninjaName);
            createParticleEffect(this);
        });

        // „Éõ„Éê„Éº„Ç®„Éï„Çß„ÇØ„ÉàÂº∑Âåñ
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-15px) scale(1.08) rotateY(5deg)';
            createSparkles(this);
        });

        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1) rotateY(0deg)';
        });
    });

    // „Éë„Éº„ÉÜ„Ç£„ÇØ„É´„Ç®„Éï„Çß„ÇØ„Éà
    function createParticleEffect(element) {
        const rect = element.getBoundingClientRect();
        const centerX = rect.left + rect.width / 2;
        const centerY = rect.top + rect.height / 2;

        for (let i = 0; i < 15; i++) {
            const particle = document.createElement('div');
            particle.className = 'particle';
            particle.style.cssText = `
                position: fixed;
                left: ${centerX}px;
                top: ${centerY}px;
                width: 6px;
                height: 6px;
                background: ${getRandomColor()};
                border-radius: 50%;
                pointer-events: none;
                z-index: 1000;
                animation: particle-burst 1s ease-out forwards;
            `;

            const angle = (i / 15) * 2 * Math.PI;
            const velocity = 100 + Math.random() * 100;
            const vx = Math.cos(angle) * velocity;
            const vy = Math.sin(angle) * velocity;

            particle.style.setProperty('--vx', vx + 'px');
            particle.style.setProperty('--vy', vy + 'px');

            document.body.appendChild(particle);

            setTimeout(() => {
                particle.remove();
            }, 1000);
        }
    }

    // „Çπ„Éë„Éº„ÇØ„É´„Ç®„Éï„Çß„ÇØ„Éà
    function createSparkles(element) {
        const rect = element.getBoundingClientRect();
        
        for (let i = 0; i < 8; i++) {
            const sparkle = document.createElement('div');
            sparkle.className = 'sparkle';
            sparkle.innerHTML = '‚ú®';
            sparkle.style.cssText = `
                position: fixed;
                left: ${rect.left + Math.random() * rect.width}px;
                top: ${rect.top + Math.random() * rect.height}px;
                font-size: ${12 + Math.random() * 8}px;
                pointer-events: none;
                z-index: 999;
                animation: sparkle-fade 1.5s ease-out forwards;
            `;

            document.body.appendChild(sparkle);

            setTimeout(() => {
                sparkle.remove();
            }, 1500);
        }
    }

    // „Éã„É≥„Ç∏„É£„É¢„Éº„ÉÄ„É´Ë°®Á§∫
    function showNinjaModal(ninjaName) {
        // Êó¢Â≠ò„ÅÆ„É¢„Éº„ÉÄ„É´„ÇíÂâäÈô§
        const existingModal = document.querySelector('.ninja-modal');
        if (existingModal) {
            existingModal.remove();
        }

        const modal = document.createElement('div');
        modal.className = 'ninja-modal';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-close">&times;</div>
                <h2>${ninjaName}„ÅÆË©≥Á¥∞</h2>
                <div class="ninja-stats">
                    <div class="stat">
                        <span class="stat-label">„É¨„Éô„É´:</span>
                        <span class="stat-value">${Math.floor(Math.random() * 50) + 50}</span>
                    </div>
                    <div class="stat">
                        <span class="stat-label">„Çπ„Ç≠„É´:</span>
                        <span class="stat-value">${getRandomSkill()}</span>
                    </div>
                    <div class="stat">
                        <span class="stat-label">Â±ûÊÄß:</span>
                        <span class="stat-value">${getRandomElement()}</span>
                    </div>
                </div>
                <div class="ninja-description-full">
                    ${getNinjaDescription(ninjaName)}
                </div>
            </div>
        `;

        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 2000;
            animation: modal-fade-in 0.3s ease-out;
        `;

        document.body.appendChild(modal);

        // „É¢„Éº„ÉÄ„É´„ÇíÈñâ„Åò„Çã
        const closeBtn = modal.querySelector('.modal-close');
        closeBtn.addEventListener('click', () => {
            modal.style.animation = 'modal-fade-out 0.3s ease-out';
            setTimeout(() => modal.remove(), 300);
        });

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.style.animation = 'modal-fade-out 0.3s ease-out';
                setTimeout(() => modal.remove(), 300);
            }
        });
    }

    // „É©„É≥„ÉÄ„É†„Ç´„É©„ÉºÁîüÊàê
    function getRandomColor() {
        const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3', '#54a0ff'];
        return colors[Math.floor(Math.random() * colors.length)];
    }

    // „É©„É≥„ÉÄ„É†„Çπ„Ç≠„É´ÁîüÊàê
    function getRandomSkill() {
        const skills = ['ÂøçË°ì', '‰ΩìË°ì', 'ÂπªË°ì', 'Â∞ÅÂç∞Ë°ì', 'ÂåªÁôÇÂøçË°ì', 'ÊÑüÁü•Ë°ì', 'ÁµêÁïåË°ì', 'Âè¨ÂñöË°ì'];
        return skills[Math.floor(Math.random() * skills.length)];
    }

    // „É©„É≥„ÉÄ„É†Â±ûÊÄßÁîüÊàê
    function getRandomElement() {
        const elements = ['ÁÅ´', 'Ê∞¥', 'È¢®', 'Âúü', 'Èõ∑', 'ÂÖâ', 'Èóá', 'Ê∞∑'];
        return elements[Math.floor(Math.random() * elements.length)];
    }

    // „Éã„É≥„Ç∏„É£Ë™¨ÊòéÊñá
    function getNinjaDescription(name) {
        const descriptions = {
            '„Çµ„ÇØ„É§': 'ÊôÇÁ©∫„ÇíÊìç„ÇãÁ•ûÁßòÁöÑ„Å™ÂøçËÄÖ„ÄÇÈÅéÂéª„Å®Êú™Êù•„ÇíËá™Âú®„Å´Ë°å„ÅçÊù•„Åó„ÄÅÊà¶Â†¥„Åß„ÅØ‰∫àÁü•ËÉΩÂäõ„ÇíÈßÜ‰Ωø„Åó„Å¶Êïµ„ÇíÁøªÂºÑ„Åô„Çã„ÄÇ',
            '„Ç∏„É£„Éé„É°': 'Ëù∂„ÅÆ„Çà„ÅÜ„Å´Áæé„Åó„ÅèËàû„ÅÑË∏ä„ÇãÂøçËÄÖ„ÄÇËèØÈ∫ó„Å™Âãï„Åç„ÅßÊïµ„ÇíÊÉë„Çè„Åó„ÄÅÊØí„ÅÆÁ≤â„ÅßÁõ∏Êâã„ÇíÁú†„Çä„Å´Ë™ò„ÅÜ„ÄÇ',
            '„Ç∏„É≥': 'È¢®„ÅÆÁ≤æÈúä„Å®Â•ëÁ¥Ñ„ÇíÁµê„Çì„Å†ÂøçËÄÖ„ÄÇÂµê„ÇíÂëº„Å≥Ëµ∑„Åì„Åó„ÄÅÁ´úÂ∑ª„ÅßÊïµ„ÇíÂ∑ª„ÅçËæº„ÇÄÂº∑Âäõ„Å™Ë°ì„Çí‰Ωø„ÅÜ„ÄÇ',
            '„Ç∑„Ç™„É≥': 'Á¥´„ÅÆÁÇé„ÇíÊìç„ÇãÁ•ûÁßòÁöÑ„Å™ÂøçËÄÖ„ÄÇÁæé„Åó„ÅÑÁ¥´„ÅÆÁÇé„ÅØË¶ã„ÇãËÄÖ„ÇíÈ≠Ö‰∫Ü„Åó„ÄÅÂº∑Âäõ„Å™Á†¥Â£äÂäõ„ÇíÊåÅ„Å§„ÄÇ',
            '„Ç∑„É£„Ç™„É©„É≥': 'Èõ∑„ÇíËá™Âú®„Å´Êìç„ÇãÈõªÊíÉÂøçËÄÖ„ÄÇÁ®≤Â¶ª„ÅÆÈÄü„Åï„ÅßÁßªÂãï„Åó„ÄÅÈõ∑ÊíÉ„ÅßÊïµ„ÇíÈ∫ªÁó∫„Åï„Åõ„Çã„ÄÇ',
            '„Éç„É†': 'Â§¢„ÅÆ‰∏ñÁïå„ÇíÊîØÈÖç„Åô„ÇãÂøçËÄÖ„ÄÇÊïµ„ÇíÊ∑±„ÅÑÁú†„Çä„Å´Ë™ò„ÅÑ„ÄÅÊÇ™Â§¢„ÅßÁ≤æÁ•û„ÇíÊîªÊíÉ„Åô„ÇãÊÅê„Çç„Åó„ÅÑË°ì„Çí‰Ωø„ÅÜ„ÄÇ',
            '„Éè„É§„ÉÜ': 'ÁñæÈ¢®„ÅÆ„Çà„ÅÜ„Å´Á¥†Êó©„ÅÑÂøçËÄÖ„ÄÇ„Åù„ÅÆÈÄü„Åï„ÅØÁõÆ„Å´„ÇÇÊ≠¢„Åæ„Çâ„Åö„ÄÅÈ¢®„ÅÆÂàÉ„ÅßÊïµ„ÇíÂàá„ÇäË£Ç„Åè„ÄÇ',
            '„É¶„Ç§': 'ÁµÜ„Å®Áµê„Å≥„ÅÆÂäõ„ÇíÊìç„ÇãÂøçËÄÖ„ÄÇ‰ª≤Èñì„Å®„ÅÆÁµÜ„ÇíÂäõ„Å´Â§â„Åà„ÄÅÂº∑Âäõ„Å™ÁµêÁïåË°ì„ÅßÂë≥Êñπ„ÇíÂÆà„Çã„ÄÇ',
            '„É¨„Ç§': 'Èúä„Å®‰∫§‰ø°„Åß„Åç„ÇãÁ•ûÁßòÁöÑ„Å™ÂøçËÄÖ„ÄÇÊ≠ªËÄÖ„ÅÆÈ≠Ç„ÇíÂëº„Å≥Ëµ∑„Åì„Åó„ÄÅÈúä„ÅÆÂäõ„ÇíÂÄü„Çä„Å¶Êà¶„ÅÜ„ÄÇ',
            '„É≠„Éà„É≥': 'ÁÇé„ÅÆÁÇâ„ÇíÊìç„ÇãÈçõÂÜ∂ÂøçËÄÖ„ÄÇÁÅºÁÜ±„ÅÆÁÇé„ÅßÊ≠¶Âô®„ÇíÈçõ„Åà„ÄÅÁÇé„ÅÆË°ì„ÅßÊïµ„ÇíÁÑº„ÅçÂ∞Ω„Åè„Åô„ÄÇ'
        };
        return descriptions[name] || '„ÇØ„É™„Éó„Éà„Éã„É≥„Ç∏„É£„ÅÆ‰∏ñÁïå„ÅßÊ¥ªË∫ç„Åô„ÇãË¨éÂ§ö„ÅçÂøçËÄÖ„ÄÇ';
    }

    // „Çø„Ç§„Éà„É´ÊñáÂ≠ó„ÅÆ„É©„É≥„ÉÄ„É†„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    function randomTitleAnimation() {
        titleChars.forEach((char, index) => {
            setTimeout(() => {
                char.style.animation = 'none';
                char.offsetHeight; // „É™„Éï„É≠„ÉºÂº∑Âà∂
                char.style.animation = `bounce 0.6s ease-out, rainbow 3s ease-in-out infinite`;
            }, index * 100);
        });
    }

    // ÂÆöÊúüÁöÑ„Å´„Çø„Ç§„Éà„É´„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂÆüË°å
    setInterval(randomTitleAnimation, 8000);

    // „Éï„É≠„Éº„ÉÜ„Ç£„É≥„Ç∞Ë¶ÅÁ¥†„ÅÆ„ÇØ„É™„ÉÉ„ÇØ„Ç§„Éô„É≥„Éà
    floatingNinjas.forEach(ninja => {
        ninja.style.cursor = 'pointer';
        ninja.addEventListener('click', function() {
            this.style.animation = 'none';
            this.offsetHeight; // „É™„Éï„É≠„ÉºÂº∑Âà∂
            this.style.animation = 'spin 1s ease-out, float-around 10s linear infinite';
            createParticleEffect(this);
        });
    });

    // „Çπ„ÇØ„É≠„Éº„É´„Ç®„Éï„Çß„ÇØ„Éà
    window.addEventListener('scroll', function() {
        const scrolled = window.pageYOffset;
        const parallax = scrolled * 0.5;
        
        document.querySelector('.stars').style.transform = `translateY(${parallax}px)`;
        document.querySelector('.twinkling').style.transform = `translateY(${parallax * 0.8}px)`;
    });

    // „Éû„Ç¶„ÇπËøΩÂæì„Ç®„Éï„Çß„ÇØ„Éà
    document.addEventListener('mousemove', function(e) {
        const cursor = document.querySelector('.custom-cursor');
        if (!cursor) {
            const newCursor = document.createElement('div');
            newCursor.className = 'custom-cursor';
            newCursor.innerHTML = 'üåü';
            newCursor.style.cssText = `
                position: fixed;
                pointer-events: none;
                z-index: 9999;
                font-size: 20px;
                transition: all 0.1s ease;
            `;
            document.body.appendChild(newCursor);
        }
        
        const cursorElement = document.querySelector('.custom-cursor');
        cursorElement.style.left = e.clientX - 10 + 'px';
        cursorElement.style.top = e.clientY - 10 + 'px';
    });
});

// CSS „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ËøΩÂä†
const additionalStyles = `
@keyframes particle-burst {
    0% {
        transform: translate(0, 0) scale(1);
        opacity: 1;
    }
    100% {
        transform: translate(var(--vx), var(--vy)) scale(0);
        opacity: 0;
    }
}

@keyframes sparkle-fade {
    0% {
        transform: scale(0) rotate(0deg);
        opacity: 1;
    }
    50% {
        transform: scale(1) rotate(180deg);
        opacity: 1;
    }
    100% {
        transform: scale(0) rotate(360deg);
        opacity: 0;
    }
}

@keyframes modal-fade-in {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes modal-fade-out {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0.8);
    }
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(720deg); }
}

.ninja-modal .modal-content {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
    backdrop-filter: blur(20px);
    border-radius: 20px;
    padding: 40px;
    max-width: 500px;
    width: 90%;
    border: 2px solid rgba(255, 255, 255, 0.2);
    color: white;
    text-align: center;
    position: relative;
    animation: modal-content-slide 0.5s ease-out;
}

@keyframes modal-content-slide {
    from {
        transform: translateY(-50px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.modal-close {
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 30px;
    cursor: pointer;
    color: rgba(255, 255, 255, 0.7);
    transition: all 0.3s ease;
}

.modal-close:hover {
    color: white;
    transform: scale(1.2);
}

.ninja-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 20px;
    margin: 30px 0;
}

.stat {
    background: rgba(255, 255, 255, 0.1);
    padding: 15px;
    border-radius: 10px;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.stat-label {
    display: block;
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 5px;
}

.stat-value {
    display: block;
    font-size: 1.2rem;
    font-weight: bold;
    color: #4ecdc4;
}

.ninja-description-full {
    font-size: 1rem;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.9);
    text-align: left;
    background: rgba(0, 0, 0, 0.2);
    padding: 20px;
    border-radius: 10px;
    border-left: 4px solid #4ecdc4;
}
`;

const styleSheet = document.createElement('style');
styleSheet.textContent = additionalStyles;
document.head.appendChild(styleSheet);
